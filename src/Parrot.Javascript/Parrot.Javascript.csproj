<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <ProjectGuid>{4CA66447-11C8-4EB1-A1E6-936F812D9199}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <TypeScriptToolsVersion>0.9</TypeScriptToolsVersion>
    <UseIISExpress>true</UseIISExpress>
    <IISExpressSSLPort />
    <IISExpressAnonymousAuthentication />
    <IISExpressWindowsAuthentication />
    <IISExpressUseClassicPipelineMode />
  </PropertyGroup>
  <ItemGroup>
    <Content Include="Infrastructure\exceptions.js">
      <DependentUpon>exceptions.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\exceptions.min.js">
      <DependentUpon>exceptions.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\Locals.js">
      <DependentUpon>Locals.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\Locals.min.js">
      <DependentUpon>Locals.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ObjectModelValueProvider.js">
      <DependentUpon>ObjectModelValueProvider.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ObjectModelValueProvider.min.js">
      <DependentUpon>ObjectModelValueProvider.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ValueTypeProvider.js">
      <DependentUpon>ValueTypeProvider.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ValueTypeProvider.min.js">
      <DependentUpon>ValueTypeProvider.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\token.js">
      <DependentUpon>token.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\token.min.js">
      <DependentUpon>token.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenizer.js">
      <DependentUpon>tokenizer.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenizer.min.js">
      <DependentUpon>tokenizer.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokens.js">
      <DependentUpon>tokens.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokens.min.js">
      <DependentUpon>tokens.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenType.js">
      <DependentUpon>tokenType.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenType.min.js">
      <DependentUpon>tokenType.ts</DependentUpon>
    </Content>
    <Content Include="parser.js">
      <DependentUpon>parser.ts</DependentUpon>
    </Content>
    <Content Include="parser.min.js">
      <DependentUpon>parser.ts</DependentUpon>
    </Content>
    <Content Include="parserError.js">
      <DependentUpon>parserError.ts</DependentUpon>
    </Content>
    <Content Include="parserError.min.js">
      <DependentUpon>parserError.ts</DependentUpon>
    </Content>
    <Content Include="stream.js">
      <DependentUpon>stream.ts</DependentUpon>
    </Content>
    <Content Include="stream.min.js">
      <DependentUpon>stream.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\baseRenderer.js">
      <DependentUpon>baseRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\baseRenderer.min.js">
      <DependentUpon>baseRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\conditionalRenderer.js">
      <DependentUpon>conditionalRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\conditionalRenderer.min.js">
      <DependentUpon>conditionalRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\docTypeRenderer.js">
      <DependentUpon>docTypeRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\docTypeRenderer.min.js">
      <DependentUpon>docTypeRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\foreachRenderer.js">
      <DependentUpon>foreachRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\foreachRenderer.min.js">
      <DependentUpon>foreachRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\htmlRenderer.js">
      <DependentUpon>htmlRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\htmlRenderer.min.js">
      <DependentUpon>htmlRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\ifRenderer.js">
      <DependentUpon>ifRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\ifRenderer.min.js">
      <DependentUpon>ifRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\inputRenderer.js">
      <DependentUpon>inputRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\inputRenderer.min.js">
      <DependentUpon>inputRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\listRenderer.js">
      <DependentUpon>listRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\listRenderer.min.js">
      <DependentUpon>listRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\parrotDocumentView.js">
      <DependentUpon>parrotDocumentView.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\parrotDocumentView.min.js">
      <DependentUpon>parrotDocumentView.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\rendererProvider.js">
      <DependentUpon>rendererProvider.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\rendererProvider.min.js">
      <DependentUpon>rendererProvider.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\selfClosingRenderer.js">
      <DependentUpon>selfClosingRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\selfClosingRenderer.min.js">
      <DependentUpon>selfClosingRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\stringRenderer.js">
      <DependentUpon>stringRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\stringRenderer.min.js">
      <DependentUpon>stringRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\tagBuilder.js">
      <DependentUpon>tagBuilder.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\tagBuilder.min.js">
      <DependentUpon>tagBuilder.ts</DependentUpon>
    </Content>
    <Content Include="Tests\parser.html" />
    <Content Include="web.config" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="Infrastructure\Locals.ts" />
    <TypeScriptCompile Include="Infrastructure\ObjectModelValueProvider.ts" />
    <TypeScriptCompile Include="Infrastructure\ValueTypeProvider.ts" />
    <TypeScriptCompile Include="Lexer\token.ts" />
    <TypeScriptCompile Include="Lexer\tokenizer.ts" />
    <TypeScriptCompile Include="Lexer\tokens.ts" />
    <TypeScriptCompile Include="Lexer\tokenType.ts" />
    <TypeScriptCompile Include="parser.ts" />
    <TypeScriptCompile Include="parserError.ts" />
    <TypeScriptCompile Include="stream.ts" />
    <TypeScriptCompile Include="Renderers\baseRenderer.ts" />
    <TypeScriptCompile Include="Renderers\conditionalRenderer.ts" />
    <TypeScriptCompile Include="Renderers\docTypeRenderer.ts" />
    <TypeScriptCompile Include="Renderers\foreachRenderer.ts" />
    <TypeScriptCompile Include="Renderers\htmlRenderer.ts" />
    <TypeScriptCompile Include="Renderers\ifRenderer.ts" />
    <TypeScriptCompile Include="Renderers\inputRenderer.ts" />
    <TypeScriptCompile Include="Renderers\iRenderer.ts" />
    <TypeScriptCompile Include="Renderers\listRenderer.ts" />
    <TypeScriptCompile Include="Renderers\parrotDocumentView.ts" />
    <TypeScriptCompile Include="Renderers\rendererProvider.ts" />
    <TypeScriptCompile Include="Renderers\selfClosingRenderer.ts" />
    <TypeScriptCompile Include="Renderers\stringRenderer.ts" />
    <TypeScriptCompile Include="Renderers\tagBuilder.ts" />
    <TypeScriptCompile Include="Infrastructure\exceptions.ts" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Infrastructure\Locals.js.map">
      <DependentUpon>Locals.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ObjectModelValueProvider.js.map">
      <DependentUpon>ObjectModelValueProvider.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\ValueTypeProvider.js.map">
      <DependentUpon>ValueTypeProvider.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\token.js.map">
      <DependentUpon>token.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenizer.js.map">
      <DependentUpon>tokenizer.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokens.js.map">
      <DependentUpon>tokens.ts</DependentUpon>
    </Content>
    <Content Include="Lexer\tokenType.js.map">
      <DependentUpon>tokenType.ts</DependentUpon>
    </Content>
    <Content Include="parser.js.map">
      <DependentUpon>parser.ts</DependentUpon>
    </Content>
    <Content Include="parserError.js.map">
      <DependentUpon>parserError.ts</DependentUpon>
    </Content>
    <Content Include="stream.js.map">
      <DependentUpon>stream.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\baseRenderer.js.map">
      <DependentUpon>baseRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\conditionalRenderer.js.map">
      <DependentUpon>conditionalRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\docTypeRenderer.js.map">
      <DependentUpon>docTypeRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\foreachRenderer.js.map">
      <DependentUpon>foreachRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\htmlRenderer.js.map">
      <DependentUpon>htmlRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\ifRenderer.js.map">
      <DependentUpon>ifRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\inputRenderer.js.map">
      <DependentUpon>inputRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\listRenderer.js.map">
      <DependentUpon>listRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\parrotDocumentView.js.map">
      <DependentUpon>parrotDocumentView.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\rendererProvider.js.map">
      <DependentUpon>rendererProvider.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\selfClosingRenderer.js.map">
      <DependentUpon>selfClosingRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\stringRenderer.js.map">
      <DependentUpon>stringRenderer.ts</DependentUpon>
    </Content>
    <Content Include="Renderers\tagBuilder.js.map">
      <DependentUpon>tagBuilder.ts</DependentUpon>
    </Content>
    <Content Include="Infrastructure\exceptions.js.map">
      <DependentUpon>exceptions.ts</DependentUpon>
    </Content>
    <None Include="web.Debug.config">
      <DependentUpon>web.config</DependentUpon>
    </None>
    <None Include="web.Release.config">
      <DependentUpon>web.config</DependentUpon>
    </None>
  </ItemGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <PropertyGroup>
    <RootNamespace>TypeScriptHTMLApp1</RootNamespace>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets" Condition="'$(VSToolsPath)' != ''" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>True</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>63587</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:63587/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptRemoveComments>false</TypeScriptRemoveComments>
    <TypeScriptSourceMap>true</TypeScriptSourceMap>
    <TypeScriptModuleKind>AMD</TypeScriptModuleKind>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptRemoveComments>true</TypeScriptRemoveComments>
    <TypeScriptSourceMap>false</TypeScriptSourceMap>
    <TypeScriptModuleKind>AMD</TypeScriptModuleKind>
  </PropertyGroup>
  <Import Project="$(VSToolsPath)\TypeScript\Microsoft.TypeScript.targets" Condition="Exists('$(VSToolsPath)\TypeScript\Microsoft.TypeScript.targets')" />
</Project>